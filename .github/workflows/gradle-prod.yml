name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    ## create application.yml
    - name: make application.yml
      run: |
        ## create application.yml
        cd ./src/main/resources

        # application.yml 파일 생성
        rm ./application.yml
        touch ./application.yml

        # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
        echo "${{ secrets.APPLICATION_PROD }}" >> ./application.yml
      shell: bash

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew bootJar

    ## 웹 이미지 빌드 및 도커허브에 push
    - name: API Dockerfile 빌드 후 Docker Hub push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/niceguy-api .
        docker push ${{ secrets.DOCKER_REPO }}/niceguy-api

    ## docker compose up
    - name: API-01 docker-compose 실행 (SSH)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST01 }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        proxy_host: ${{ secrets.PROXY_HOST }}
        proxy_username: ubuntu
        proxy_key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/niceguy-api
          docker-compose up -d
          docker image prune -f

    - name: API-02 docker-compose 실행 (SSH)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST02 }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        proxy_host: ${{ secrets.PROXY_HOST }}
        proxy_username: ubuntu
        proxy_key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/niceguy-api
          docker-compose up -d
          docker image prune -f

    - name: action-slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: Juwon Lee
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.